unbind C-b
set -g prefix `
bind-key ` send-prefix
#bind-key ` last-window
bind c new-window -c "#{pane_current_path}"
set-option -g history-limit 50000
# Start numbering at 1
set -g base-index 1
# Allows for faster key repetition
set -s escape-time 0
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right '[#S:#H]'

set-window-option -g window-status-current-format '#[fg=white,bold]#{?window_zoomed_flag,#[fg=red],} #{window_index} #[fg=green]#(tmux list-panes -F "##{pane_current_command}" | tr "\n" "," | rev | cut -c 2- | rev) #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]|'
set-window-option -g window-status-format '#[fg=white,dim,bold]#{?window_zoomed_flag,#[fg=red],} #{?window_activity_flag,*,}#{window_index} #[fg=green,dim]#(tmux list-panes -a -F "##{window_index}: ##{pane_current_command}" | fgrep #{window_index}: | cut -c 4- | tr "\n" "," | rev | cut -c 2- | rev) #[fg=blue,dim]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]|'

# set -g pane-border-format '#(sleep 1; ps -t #{pane_tty} | tail -n 1)'

# for vim's focus lost events
set -g focus-events on

#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"
# more intuitive keybindings for splitting
unbind %
bind h split-window -h -c "#{pane_current_path}"
unbind '"'
bind v split-window -v -c "#{pane_current_path}"
bind V split-window -v -b -c "#{pane_current_path}"
bind q last-pane \; resize-pane -Z
# set vi keys
unbind [
bind Escape copy-mode
set -g mouse on
#don't exit copy mode after releasing the mouse button
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "xclip -selection clipboard -i" \; send -X clear-selection
setw -g mode-keys vi
# tmux 2.6 doesn't need the 'reattach-to-user-namespace' gymnastics
# In iTerm 2 preferences, first tab "General", enable "Applications in terminal may access clipboard".
bind-key -T edit-mode-vi Up                send-keys -X history-up
bind-key -T edit-mode-vi Down              send-keys -X history-down
bind-key -T copy-mode-vi v                 send      -X begin-selection
bind-key -T copy-mode-vi [                 send-keys -X begin-selection
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Escape            send-keys -X cancel
bind-key -T copy-mode-vi ]                 send-keys -X copy-selection
# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# Activity monitoring
set -g window-status-activity-style 'bg=black'
setw -g monitor-activity on
set -g visual-activity off

#set-window-option -g visual-bell on
#set-window-option -g bell-action other

set-option -g renumber-windows on

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour235'
set -g window-active-style 'fg=colour250,bg=black'

bind L source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind j select-pane -D
bind k select-pane -U
bind l select-pane -l

#repeat last command in right pane
#bind r send-keys -t right C-c Up Enter
#repeat last command in bottom pane
#bind b send-keys -t bottom C-c Up Enter

#repeat last command in all bottom panes
#bind-key r split-window -l 1 "~/tmux-send-last-cmd.sh"

#bind f capture-pane -S- \; command-prompt -I "grep '[0-9]*:[0-9]*:[0-9]*'" "split-window -h \"tmux show-buffer | sed '/^\s*$/d' | %% | lnav\""

bind e run "tmux capture-pane -S - -p -J > /tmp/tmux-edit && tmux popup -h 80% -w 80% -E 'nvim +\"normal G\" /tmp/tmux-edit'"

set -g status-interval 2
set -g status-right "#S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2)#[default]"
set -g status-right-length 60

# List of plugins
#set -g @plugin 'thornycrackers/tmux-drawer'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'laktak/extrakto'
#set -g @extrakto_split_direction "v"
set -g @extrakto_split_direction "a"
#set -g @extrakto_split_size "15"
#set -g @extrakto_editor "/Users/pachanga/.tmux/plugins/tmux-open-file-nvim/open-file-nvim-only.sh"
#set -g @extrakto_editor "/Users/ps/bin/ton"
set -g @extrakto_editor "nvim"
#set -g @extrakto_open_tool "/Users/ps/bin/ton"
set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
#set -g @extrakto_insert_key "enter"  # use enter to insert selection
#set -g @extrakto_insert_key "ctrl-e"  # use enter to insert selection
set -g @extrakto_open_key "ctrl-o"  # use enter to insert selection
set -g @extrakto_edit_key "enter"
set -g @extrakto_popup_size "50%"

set -g @plugin 'Peter-McKinney/tmux-open-file-nvim'

#set -g @plugin 'Morantron/tmux-fingers'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '/opt/homebrew/opt/tpm/share/tpm/tpm'
