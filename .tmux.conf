unbind C-b
set -g prefix `
bind-key ` send-prefix
#bind-key ` last-window
bind c new-window -c "#{pane_current_path}"
set-option -g history-limit 50000
set -g mouse on
# Start numbering at 1
set -g base-index 1
# Allows for faster key repetition
set -s escape-time 0
set -g default-terminal "screen-256color"
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right '[#S:#H]'
# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"
# more intuitive keybindings for splitting
unbind %
bind h split-window -h -c "#{pane_current_path}"
unbind '"'
bind v split-window -v -c "#{pane_current_path}"
bind q last-pane \; resize-pane -Z
# set vi keys
unbind [
bind Escape copy-mode
setw -g mode-keys vi
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# Activity monitoring
setw -g monitor-activity on
#set -g visual-activity on
# Highlight active window
set-window-option -g window-status-current-bg red

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour235'
set -g window-active-style 'fg=colour250,bg=black'

#defaults
#set -g window-style 'fg=default,bg=default'
#set -g window-active-style 'fg=default,bg=default'

#pane border
set -g pane-border-bg colour235
set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
#set -g pane-active-border-fg colour51

# Experimental binding to re-run the last command in the right pane, without
# leaving the current pane
bind r send-keys -t right C-c Up Enter
bind b send-keys -t bottom C-c Up Enter
